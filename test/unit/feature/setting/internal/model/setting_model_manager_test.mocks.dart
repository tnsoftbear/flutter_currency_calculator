// Mocks generated by Mockito 5.4.0 from annotations
// in currency_calc/test/unit/feature/setting/internal/model/setting_model_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:currency_calc/feature/currency/internal/ui/setting/currency_setting_widget.dart'
    as _i2;
import 'package:currency_calc/feature/currency/public/currency_feature_facade.dart'
    as _i6;
import 'package:currency_calc/feature/setting/internal/domain/repository/setting_repository.dart'
    as _i4;
import 'package:flutter/src/foundation/diagnostics.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCurrencySettingWidget_0 extends _i1.SmartFake
    implements _i2.CurrencySettingWidget {
  _FakeCurrencySettingWidget_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [SettingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingRepository extends _i1.Mock implements _i4.SettingRepository {
  @override
  _i5.Future<String?> loadString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #loadString,
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
  @override
  _i5.Future<void> saveString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<String>?> loadVisibleSourceCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleSourceCurrencyCodes,
          [],
        ),
        returnValue: _i5.Future<List<String>?>.value(),
        returnValueForMissingStub: _i5.Future<List<String>?>.value(),
      ) as _i5.Future<List<String>?>);
  @override
  _i5.Future<void> saveVisibleSourceCurrencyCodes(
          List<String>? currencyCodes) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveVisibleSourceCurrencyCodes,
          [currencyCodes],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<String>?> loadVisibleTargetCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleTargetCurrencyCodes,
          [],
        ),
        returnValue: _i5.Future<List<String>?>.value(),
        returnValueForMissingStub: _i5.Future<List<String>?>.value(),
      ) as _i5.Future<List<String>?>);
  @override
  _i5.Future<void> saveVisibleTargetCurrencyCodes(
          List<String>? currencyCodes) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveVisibleTargetCurrencyCodes,
          [currencyCodes],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [CurrencyFeatureFacade].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyFeatureFacade extends _i1.Mock
    implements _i6.CurrencyFeatureFacade {
  @override
  _i5.Future<void> populateIfNeeded() => (super.noSuchMethod(
        Invocation.method(
          #populateIfNeeded,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<List<String>> loadVisibleSourceCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleSourceCurrencyCodes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);
  @override
  _i5.Future<List<String>> loadVisibleTargetCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleTargetCurrencyCodes,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);
  @override
  _i2.CurrencySettingWidget createCurrencySettingWidget() =>
      (super.noSuchMethod(
        Invocation.method(
          #createCurrencySettingWidget,
          [],
        ),
        returnValue: _FakeCurrencySettingWidget_0(
          this,
          Invocation.method(
            #createCurrencySettingWidget,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeCurrencySettingWidget_0(
          this,
          Invocation.method(
            #createCurrencySettingWidget,
            [],
          ),
        ),
      ) as _i2.CurrencySettingWidget);
}
