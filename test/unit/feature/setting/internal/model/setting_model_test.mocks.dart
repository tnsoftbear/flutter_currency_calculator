// Mocks generated by Mockito 5.4.0 from annotations
// in currency_calc/test/unit/feature/setting/internal/model/setting_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i2;

import 'package:currency_calc/feature/setting/internal/domain/model/setting_model_manager.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocale_0 extends _i1.SmartFake implements _i2.Locale {
  _FakeLocale_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingModelManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingModelManager extends _i1.Mock
    implements _i3.SettingModelManager {
  @override
  _i4.Future<String> detectLanguageCode() => (super.noSuchMethod(
        Invocation.method(
          #detectLanguageCode,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i2.Locale> detectLocale() => (super.noSuchMethod(
        Invocation.method(
          #detectLocale,
          [],
        ),
        returnValue: _i4.Future<_i2.Locale>.value(_FakeLocale_0(
          this,
          Invocation.method(
            #detectLocale,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Locale>.value(_FakeLocale_0(
          this,
          Invocation.method(
            #detectLocale,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Locale>);
  @override
  _i4.Future<void> saveLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLanguageCode,
          [languageCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String> detectFontFamily() => (super.noSuchMethod(
        Invocation.method(
          #detectFontFamily,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> saveFontFamily(String? fontFamily) => (super.noSuchMethod(
        Invocation.method(
          #saveFontFamily,
          [fontFamily],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String> detectThemeType() => (super.noSuchMethod(
        Invocation.method(
          #detectThemeType,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> saveThemeType(String? themeType) => (super.noSuchMethod(
        Invocation.method(
          #saveThemeType,
          [themeType],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String> detectSelectedSourceCurrencyCode() => (super.noSuchMethod(
        Invocation.method(
          #detectSelectedSourceCurrencyCode,
          [],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> saveDefaultSourceCurrencyCode(String? currencyCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDefaultSourceCurrencyCode,
          [currencyCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String> detectSelectedTargetCurrencyCode(
          String? sourceCurrencyCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #detectSelectedTargetCurrencyCode,
          [sourceCurrencyCode],
        ),
        returnValue: _i4.Future<String>.value(''),
        returnValueForMissingStub: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> saveDefaultTargetCurrencyCode(String? currencyCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDefaultTargetCurrencyCode,
          [currencyCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<String>> detectVisibleSourceCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #detectVisibleSourceCurrencyCodes,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
  @override
  _i4.Future<void> saveVisibleSourceCurrencyCodes(
          List<String>? currencyCodes) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveVisibleSourceCurrencyCodes,
          [currencyCodes],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<String>> detectVisibleTargetCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #detectVisibleTargetCurrencyCodes,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
  @override
  _i4.Future<void> saveVisibleTargetCurrencyCodes(
          List<String>? currencyCodes) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveVisibleTargetCurrencyCodes,
          [currencyCodes],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
