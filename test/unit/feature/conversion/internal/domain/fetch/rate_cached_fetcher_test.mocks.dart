// Mocks generated by Mockito 5.4.0 from annotations
// in currency_calc/test/unit/feature/conversion/internal/domain/fetch/rate_cached_fetcher_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:currency_calc/feature/conversion/internal/domain/fetch/cache/rate_cacher.dart'
    as _i4;
import 'package:currency_calc/feature/conversion/internal/domain/fetch/load/rate_fetcher.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RateFetcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockRateFetcher extends _i1.Mock implements _i2.RateFetcher {
  @override
  _i3.Future<double> fetchExchangeRate(
    String? sourceCurrencyCode,
    String? targetCurrencyCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchExchangeRate,
          [
            sourceCurrencyCode,
            targetCurrencyCode,
          ],
        ),
        returnValue: _i3.Future<double>.value(0.0),
        returnValueForMissingStub: _i3.Future<double>.value(0.0),
      ) as _i3.Future<double>);
}

/// A class which mocks [RateCacher].
///
/// See the documentation for Mockito's code generation for more information.
class MockRateCacher extends _i1.Mock implements _i4.RateCacher {
  @override
  _i3.Future<double?> get(
    String? sourceCurrencyCode,
    String? targetCurrencyCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            sourceCurrencyCode,
            targetCurrencyCode,
          ],
        ),
        returnValue: _i3.Future<double?>.value(),
        returnValueForMissingStub: _i3.Future<double?>.value(),
      ) as _i3.Future<double?>);
  @override
  _i3.Future<void> set(
    String? sourceCurrencyCode,
    String? targetCurrencyCode,
    double? rate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            sourceCurrencyCode,
            targetCurrencyCode,
            rate,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
