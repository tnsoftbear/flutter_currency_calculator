// Mocks generated by Mockito 5.4.0 from annotations
// in currency_calc/test/unit/feature/conversion/internal/domain/fetch/rate_fetcher_factory_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:currency_calc/core/network/http/http_client.dart' as _i3;
import 'package:currency_calc/feature/conversion/internal/domain/model/exchange_rate_record.dart'
    as _i5;
import 'package:currency_calc/feature/conversion/internal/domain/repository/exchange_rate_record_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T> extends _i1.SmartFake implements _i2.Future<T> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i3.HttpClient {
  @override
  _i2.Future<T> get<T>(
    String? url, {
    Map<String, dynamic>? queryParams = const {},
    Map<String, String>? headers = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #queryParams: queryParams,
            #headers: headers,
          },
        ),
        returnValue: _FakeFuture_0<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParams: queryParams,
              #headers: headers,
            },
          ),
        ),
        returnValueForMissingStub: _FakeFuture_0<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #queryParams: queryParams,
              #headers: headers,
            },
          ),
        ),
      ) as _i2.Future<T>);
}

/// A class which mocks [ExchangeRateRecordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockExchangeRateRecordRepository extends _i1.Mock
    implements _i4.ExchangeRateRecordRepository {
  @override
  _i2.Future<_i5.ExchangeRateRecord?> loadByKey(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadByKey,
          [key],
        ),
        returnValue: _i2.Future<_i5.ExchangeRateRecord?>.value(),
        returnValueForMissingStub: _i2.Future<_i5.ExchangeRateRecord?>.value(),
      ) as _i2.Future<_i5.ExchangeRateRecord?>);
  @override
  _i2.Future<void> saveByKey(
    String? key,
    _i5.ExchangeRateRecord? record,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveByKey,
          [
            key,
            record,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> deleteByKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteByKey,
          [key],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}
