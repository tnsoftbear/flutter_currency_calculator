// Mocks generated by Mockito 5.4.0 from annotations
// in currency_calc/test/unit/feature/currency/internal/domain/populate/currency_populator_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:currency_calc/feature/currency/internal/domain/fetch/load/currency_fetcher.dart'
    as _i2;
import 'package:currency_calc/feature/currency/internal/domain/model/currency.dart'
    as _i4;
import 'package:currency_calc/feature/currency/internal/domain/repository/currency_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CurrencyFetcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyFetcher extends _i1.Mock implements _i2.CurrencyFetcher {
  @override
  _i3.Future<Map<String, _i4.Currency>> fetchAvailableCurrencies() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAvailableCurrencies,
          [],
        ),
        returnValue: _i3.Future<Map<String, _i4.Currency>>.value(
            <String, _i4.Currency>{}),
        returnValueForMissingStub: _i3.Future<Map<String, _i4.Currency>>.value(
            <String, _i4.Currency>{}),
      ) as _i3.Future<Map<String, _i4.Currency>>);
}

/// A class which mocks [CurrencyRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyRepository extends _i1.Mock
    implements _i5.CurrencyRepository {
  @override
  _i3.Future<int> countVisibleSourceCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #countVisibleSourceCurrencies,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> countVisibleTargetCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #countVisibleTargetCurrencies,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<_i4.Currency?> loadByCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #loadByCode,
          [code],
        ),
        returnValue: _i3.Future<_i4.Currency?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.Currency?>.value(),
      ) as _i3.Future<_i4.Currency?>);
  @override
  _i3.Future<List<_i4.Currency>> loadAllCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #loadAllCurrencies,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
      ) as _i3.Future<List<_i4.Currency>>);
  @override
  _i3.Future<List<_i4.Currency>> loadCurrenciesByCodeFirstLetter(
          String? letter) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadCurrenciesByCodeFirstLetter,
          [letter],
        ),
        returnValue: _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
      ) as _i3.Future<List<_i4.Currency>>);
  @override
  _i3.Future<List<String>> loadCurrencyCodeFirstLetters() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadCurrencyCodeFirstLetters,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);
  @override
  _i3.Future<Map<String, _i4.Currency>> loadAllIndexedByCode() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadAllIndexedByCode,
          [],
        ),
        returnValue: _i3.Future<Map<String, _i4.Currency>>.value(
            <String, _i4.Currency>{}),
        returnValueForMissingStub: _i3.Future<Map<String, _i4.Currency>>.value(
            <String, _i4.Currency>{}),
      ) as _i3.Future<Map<String, _i4.Currency>>);
  @override
  _i3.Future<List<_i4.Currency>> loadVisibleSourceCurrencies() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleSourceCurrencies,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
      ) as _i3.Future<List<_i4.Currency>>);
  @override
  _i3.Future<List<String>> loadVisibleSourceCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleSourceCurrencyCodes,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);
  @override
  _i3.Future<List<_i4.Currency>> loadVisibleTargetCurrencies() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleTargetCurrencies,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Currency>>.value(<_i4.Currency>[]),
      ) as _i3.Future<List<_i4.Currency>>);
  @override
  _i3.Future<List<String>> loadVisibleTargetCurrencyCodes() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadVisibleTargetCurrencyCodes,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);
  @override
  _i3.Future<DateTime?> loadLastUpdateDate() => (super.noSuchMethod(
        Invocation.method(
          #loadLastUpdateDate,
          [],
        ),
        returnValue: _i3.Future<DateTime?>.value(),
        returnValueForMissingStub: _i3.Future<DateTime?>.value(),
      ) as _i3.Future<DateTime?>);
  @override
  _i3.Future<void> save(_i4.Currency? currency) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [currency],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> saveAll(Map<String, _i4.Currency>? currencies) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAll,
          [currencies],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> saveLastUpdateDateToNow() => (super.noSuchMethod(
        Invocation.method(
          #saveLastUpdateDateToNow,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
